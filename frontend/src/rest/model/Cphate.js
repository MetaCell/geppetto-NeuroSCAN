/* eslint-disable */
/**
 * NeuroScan (latest)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@metacell.us
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Cphate model module.
 * @module model/Cphate
 * @version 1.0.0
 */
class Cphate {
  /**
     * Constructs a new <code>Cphate</code>.
     * @alias module:model/Cphate
     * @param id {String}
     */
  constructor(id) {
    Cphate.initialize(this, id);
  }

  /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
  static initialize(obj, id) {
    obj.id = id;
  }

  /**
     * Constructs a <code>Cphate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Cphate} obj Optional instance to populate.
     * @return {module:model/Cphate} The populated <code>Cphate</code> instance.
     */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Cphate();

      if (data.hasOwnProperty('id')) {
        obj.id = ApiClient.convertToType(data.id, 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj.name = ApiClient.convertToType(data.name, 'String');
      }
      if (data.hasOwnProperty('files')) {
        obj.files = ApiClient.convertToType(data.files, [Object]);
      }
      if (data.hasOwnProperty('structure')) {
        obj.structure = ApiClient.convertToType(data.structure, Object);
      }
      if (data.hasOwnProperty('timepoints')) {
        obj.timepoints = ApiClient.convertToType(data.timepoints, Object);
      }
      if (data.hasOwnProperty('published_at')) {
        obj.published_at = ApiClient.convertToType(data.published_at, 'Date');
      }
    }
    return obj;
  }
}

/**
 * @member {String} id
 */
Cphate.prototype.id = undefined;

/**
 * @member {String} name
 */
Cphate.prototype.name = undefined;

/**
 * @member {Array.<Object>} files
 */
Cphate.prototype.files = undefined;

/**
 * @member {Object} structure
 */
Cphate.prototype.structure = undefined;

/**
 * @member {Object} timepoints
 */
Cphate.prototype.timepoints = undefined;

/**
 * @member {Date} published_at
 */
Cphate.prototype.published_at = undefined;

export default Cphate;
