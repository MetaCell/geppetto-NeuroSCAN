/* eslint-disable */
/**
 * NeuroScan
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@metacell.us
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EmailForm model module.
 * @module model/EmailForm
 * @version 1.0.0
 */
class EmailForm {
    /**
     * Constructs a new <code>EmailForm</code>.
     * @alias module:model/EmailForm
     * @param to {String} 
     * @param from {String} 
     * @param subject {String} 
     * @param text {String} 
     */
    constructor(to, from, subject, text) { 
        
        EmailForm.initialize(this, to, from, subject, text);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, to, from, subject, text) { 
        obj['to'] = to;
        obj['from'] = from;
        obj['subject'] = subject;
        obj['text'] = text;
    }

    /**
     * Constructs a <code>EmailForm</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EmailForm} obj Optional instance to populate.
     * @return {module:model/EmailForm} The populated <code>EmailForm</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EmailForm();

            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], 'String');
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'String');
            }
            if (data.hasOwnProperty('cc')) {
                obj['cc'] = ApiClient.convertToType(data['cc'], 'String');
            }
            if (data.hasOwnProperty('bcc')) {
                obj['bcc'] = ApiClient.convertToType(data['bcc'], 'String');
            }
            if (data.hasOwnProperty('replyTo')) {
                obj['replyTo'] = ApiClient.convertToType(data['replyTo'], 'String');
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('html')) {
                obj['html'] = ApiClient.convertToType(data['html'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} to
 */
EmailForm.prototype['to'] = undefined;

/**
 * @member {String} from
 */
EmailForm.prototype['from'] = undefined;

/**
 * @member {String} cc
 */
EmailForm.prototype['cc'] = undefined;

/**
 * @member {String} bcc
 */
EmailForm.prototype['bcc'] = undefined;

/**
 * @member {String} replyTo
 */
EmailForm.prototype['replyTo'] = undefined;

/**
 * @member {String} subject
 */
EmailForm.prototype['subject'] = undefined;

/**
 * @member {String} text
 */
EmailForm.prototype['text'] = undefined;

/**
 * @member {String} html
 */
EmailForm.prototype['html'] = undefined;






export default EmailForm;

