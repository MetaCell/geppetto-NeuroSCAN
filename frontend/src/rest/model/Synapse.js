/* eslint-disable */
/**
 * NeuroScan
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@metacell.us
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Neuron from './Neuron';

/**
 * The Synapse model module.
 * @module model/Synapse
 * @version 1.0.0
 */
class Synapse {
    /**
     * Constructs a new <code>Synapse</code>.
     * @alias module:model/Synapse
     * @param id {String} 
     * @param uid {String} 
     */
    constructor(id, uid) { 
        
        Synapse.initialize(this, id, uid);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, uid) { 
        obj['id'] = id;
        obj['uid'] = uid;
    }

    /**
     * Constructs a <code>Synapse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Synapse} obj Optional instance to populate.
     * @return {module:model/Synapse} The populated <code>Synapse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Synapse();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('neuronPre')) {
                obj['neuronPre'] = Neuron.constructFromObject(data['neuronPre']);
            }
            if (data.hasOwnProperty('neuronsPost')) {
                obj['neuronsPost'] = ApiClient.convertToType(data['neuronsPost'], [Object]);
            }
            if (data.hasOwnProperty('file')) {
                obj['file'] = ApiClient.convertToType(data['file'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
            if (data.hasOwnProperty('timepoints')) {
                obj['timepoints'] = ApiClient.convertToType(data['timepoints'], ['Number']);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], 'String');
            }
            if (data.hasOwnProperty('section')) {
                obj['section'] = ApiClient.convertToType(data['section'], 'String');
            }
            if (data.hasOwnProperty('zs')) {
                obj['zs'] = ApiClient.convertToType(data['zs'], 'String');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'String');
            }
            if (data.hasOwnProperty('published_at')) {
                obj['published_at'] = ApiClient.convertToType(data['published_at'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
Synapse.prototype['id'] = undefined;

/**
 * @member {module:model/Neuron} neuronPre
 */
Synapse.prototype['neuronPre'] = undefined;

/**
 * @member {Array.<Object>} neuronsPost
 */
Synapse.prototype['neuronsPost'] = undefined;

/**
 * @member {String} file
 */
Synapse.prototype['file'] = undefined;

/**
 * @member {module:model/Synapse.TypeEnum} type
 */
Synapse.prototype['type'] = undefined;

/**
 * @member {String} uid
 */
Synapse.prototype['uid'] = undefined;

/**
 * @member {Array.<Number>} timepoints
 */
Synapse.prototype['timepoints'] = undefined;

/**
 * @member {String} metadata
 */
Synapse.prototype['metadata'] = undefined;

/**
 * @member {String} section
 */
Synapse.prototype['section'] = undefined;

/**
 * @member {String} zs
 */
Synapse.prototype['zs'] = undefined;

/**
 * @member {module:model/Synapse.PositionEnum} position
 */
Synapse.prototype['position'] = undefined;

/**
 * @member {Date} published_at
 */
Synapse.prototype['published_at'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
Synapse['TypeEnum'] = {

    /**
     * value: "chemical"
     * @const
     */
    "chemical": "chemical",

    /**
     * value: "electrical"
     * @const
     */
    "electrical": "electrical"
};


/**
 * Allowed values for the <code>position</code> property.
 * @enum {String}
 * @readonly
 */
Synapse['PositionEnum'] = {

    /**
     * value: "pre"
     * @const
     */
    "pre": "pre",

    /**
     * value: "post"
     * @const
     */
    "post": "post"
};



export default Synapse;

