/* tslint:disable */
/* eslint-disable */
/**
 * NeuroScan
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@metacell.us
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Neuron,
    NeuronFromJSON,
    NeuronFromJSONTyped,
    NeuronToJSON,
} from './';

/**
 * 
 * @export
 * @interface Contact
 */
export interface Contact {
    /**
     * 
     * @type {string}
     * @memberof Contact
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Contact
     */
    uid: string;
    /**
     * 
     * @type {Neuron}
     * @memberof Contact
     */
    neuronA?: Neuron;
    /**
     * 
     * @type {Neuron}
     * @memberof Contact
     */
    neuronB?: Neuron;
    /**
     * 
     * @type {string}
     * @memberof Contact
     */
    file?: string;
    /**
     * 
     * @type {string}
     * @memberof Contact
     */
    metadata?: string;
    /**
     * 
     * @type {number}
     * @memberof Contact
     */
    weight?: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof Contact
     */
    timepoints?: Array<number>;
    /**
     * 
     * @type {Date}
     * @memberof Contact
     */
    publishedAt?: Date;
}

export function ContactFromJSON(json: any): Contact {
    return ContactFromJSONTyped(json, false);
}

export function ContactFromJSONTyped(json: any, ignoreDiscriminator: boolean): Contact {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'uid': json['uid'],
        'neuronA': !exists(json, 'neuronA') ? undefined : NeuronFromJSON(json['neuronA']),
        'neuronB': !exists(json, 'neuronB') ? undefined : NeuronFromJSON(json['neuronB']),
        'file': !exists(json, 'file') ? undefined : json['file'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'weight': !exists(json, 'weight') ? undefined : json['weight'],
        'timepoints': !exists(json, 'timepoints') ? undefined : json['timepoints'],
        'publishedAt': !exists(json, 'published_at') ? undefined : (new Date(json['published_at'])),
    };
}

export function ContactToJSON(value?: Contact | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'uid': value.uid,
        'neuronA': NeuronToJSON(value.neuronA),
        'neuronB': NeuronToJSON(value.neuronB),
        'file': value.file,
        'metadata': value.metadata,
        'weight': value.weight,
        'timepoints': value.timepoints,
        'published_at': value.publishedAt === undefined ? undefined : (value.publishedAt.toISOString()),
    };
}


