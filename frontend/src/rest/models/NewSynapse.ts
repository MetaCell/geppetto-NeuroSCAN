/* tslint:disable */
/* eslint-disable */
/**
 * NeuroScan
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@metacell.us
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NewSynapse
 */
export interface NewSynapse {
    /**
     * 
     * @type {string}
     * @memberof NewSynapse
     */
    neuronPre?: string;
    /**
     * 
     * @type {string}
     * @memberof NewSynapse
     */
    neuronPost?: string;
    /**
     * 
     * @type {string}
     * @memberof NewSynapse
     */
    type?: NewSynapseTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof NewSynapse
     */
    name?: string;
    /**
     * 
     * @type {Date}
     * @memberof NewSynapse
     */
    publishedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof NewSynapse
     */
    createdBy?: string;
    /**
     * 
     * @type {string}
     * @memberof NewSynapse
     */
    updatedBy?: string;
}

/**
* @export
* @enum {string}
*/
export enum NewSynapseTypeEnum {
    Chemical = 'chemical',
    Electrical = 'electrical'
}

export function NewSynapseFromJSON(json: any): NewSynapse {
    return NewSynapseFromJSONTyped(json, false);
}

export function NewSynapseFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewSynapse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'neuronPre': !exists(json, 'neuronPre') ? undefined : json['neuronPre'],
        'neuronPost': !exists(json, 'neuronPost') ? undefined : json['neuronPost'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'publishedAt': !exists(json, 'published_at') ? undefined : (new Date(json['published_at'])),
        'createdBy': !exists(json, 'created_by') ? undefined : json['created_by'],
        'updatedBy': !exists(json, 'updated_by') ? undefined : json['updated_by'],
    };
}

export function NewSynapseToJSON(value?: NewSynapse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'neuronPre': value.neuronPre,
        'neuronPost': value.neuronPost,
        'type': value.type,
        'name': value.name,
        'published_at': value.publishedAt === undefined ? undefined : (value.publishedAt.toISOString()),
        'created_by': value.createdBy,
        'updated_by': value.updatedBy,
    };
}


