/* tslint:disable */
/* eslint-disable */
/**
 * NeuroScan
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@metacell.us
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NewNeuron
 */
export interface NewNeuron {
    /**
     * 
     * @type {string}
     * @memberof NewNeuron
     */
    metadata?: string;
    /**
     * 
     * @type {string}
     * @memberof NewNeuron
     */
    wormatlas?: string;
    /**
     * 
     * @type {string}
     * @memberof NewNeuron
     */
    uid: string;
    /**
     * 
     * @type {Array<number>}
     * @memberof NewNeuron
     */
    timepoints?: Array<number>;
    /**
     * 
     * @type {boolean}
     * @memberof NewNeuron
     */
    embryonic?: boolean;
    /**
     * 
     * @type {string}
     * @memberof NewNeuron
     */
    lineage?: string;
    /**
     * 
     * @type {string}
     * @memberof NewNeuron
     */
    location?: string;
    /**
     * 
     * @type {string}
     * @memberof NewNeuron
     */
    synapse?: string;
    /**
     * 
     * @type {string}
     * @memberof NewNeuron
     */
    promoter?: string;
    /**
     * 
     * @type {Date}
     * @memberof NewNeuron
     */
    publishedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof NewNeuron
     */
    createdBy?: string;
    /**
     * 
     * @type {string}
     * @memberof NewNeuron
     */
    updatedBy?: string;
}

export function NewNeuronFromJSON(json: any): NewNeuron {
    return NewNeuronFromJSONTyped(json, false);
}

export function NewNeuronFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewNeuron {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'wormatlas': !exists(json, 'wormatlas') ? undefined : json['wormatlas'],
        'uid': json['uid'],
        'timepoints': !exists(json, 'timepoints') ? undefined : json['timepoints'],
        'embryonic': !exists(json, 'embryonic') ? undefined : json['embryonic'],
        'lineage': !exists(json, 'lineage') ? undefined : json['lineage'],
        'location': !exists(json, 'location') ? undefined : json['location'],
        'synapse': !exists(json, 'synapse') ? undefined : json['synapse'],
        'promoter': !exists(json, 'promoter') ? undefined : json['promoter'],
        'publishedAt': !exists(json, 'published_at') ? undefined : (new Date(json['published_at'])),
        'createdBy': !exists(json, 'created_by') ? undefined : json['created_by'],
        'updatedBy': !exists(json, 'updated_by') ? undefined : json['updated_by'],
    };
}

export function NewNeuronToJSON(value?: NewNeuron | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'metadata': value.metadata,
        'wormatlas': value.wormatlas,
        'uid': value.uid,
        'timepoints': value.timepoints,
        'embryonic': value.embryonic,
        'lineage': value.lineage,
        'location': value.location,
        'synapse': value.synapse,
        'promoter': value.promoter,
        'published_at': value.publishedAt === undefined ? undefined : (value.publishedAt.toISOString()),
        'created_by': value.createdBy,
        'updated_by': value.updatedBy,
    };
}


